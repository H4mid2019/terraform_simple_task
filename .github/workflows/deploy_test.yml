name: Deploy Infrastructure
on: push

jobs:
  Bootstrap:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Setup Terraform üèó
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -auto-approve
          echo "::set-output name=gate_url::$(terraform output base_url)"
      
      - name: Test API Endpoint
        run: |
          STATUS_CODE=$(curl -X GET -i -s -w "%{http_code}" ${{ steps.apply.outputs.gate_url }} -o /dev/null)
          if [[ "${STATUS_CODE}" != "200" ]]; then
              echo "::error:: The gateway url status code wasn't 200. It was ${STATUS_CODE}"
              exit 1
          fi
          RESPONSE=$(curl -X GET -s ${{ steps.apply.outputs.gate_url }})
          RESPONSE_LOWER=echo "$RESPONSE" | sed 's/.*/\L&/'
          if [[ "${RESPONSE}" == *"fact"* ]] && [[ "${RESPONSE_LOWER}" != *"error"* ]]; then
              echo "::error:: The response wasn't what we expected. It was ${RESPONSE}"
              exit 1
          fi

      - name: 'Terraform Plan Destroy'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'plan'
          args: '-destroy -out=./destroy-plan'

      - name: 'Run Destroy command'
        run: terraform apply "./destroy-plan"



